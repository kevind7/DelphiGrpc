// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/TestService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace gRPCService.NET {

  /// <summary>Holder for reflection information generated from Protos/TestService.proto</summary>
  public static partial class TestServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/TestService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TestServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhQcm90b3MvVGVzdFNlcnZpY2UucHJvdG8SC1Rlc3RTZXJ2aWNlGhtnb29n",
            "bGUvcHJvdG9idWYvZW1wdHkucHJvdG8aGWdvb2dsZS9wcm90b2J1Zi9hbnku",
            "cHJvdG8ifQoORW1iZWRkZWRTaW1wbGUSEAoIVHlwZU5hbWUYASABKAkSJwoK",
            "U2ltcGxlRGF0YRgCIAEoCzITLlRlc3RTZXJ2aWNlLlNpbXBsZRIwCg9TdHJl",
            "YW1JbmZvQXJyYXkYAyADKAsyFy5UZXN0U2VydmljZS5TdHJlYW1JbmZvIlcK",
            "D0VtYmVkZGVkQ29tcGxleBITCgtDb21wbGV4SW5mbxgBIAEoCRIvCgtDb21w",
            "bGV4RGF0YRgCIAEoCzIaLlRlc3RTZXJ2aWNlLkNvbXBsZXhTdHJ1Y3QiMAoG",
            "U2ltcGxlEgwKBE5hbWUYASABKAkSCgoCSUQYAiABKAUSDAoESW5mbxgDIAEo",
            "DCJrCg1Db21wbGV4U3RydWN0Eg8KB1Jhd0RhdGEYASABKAwSEAoIRGF0YUlu",
            "Zm8YAiABKAkSDgoGRGF0YUlEGAMgASgHEicKClNpbXBsZURhdGEYBCABKAsy",
            "Ey5UZXN0U2VydmljZS5TaW1wbGUi1QEKC1JlcEFsbFR5cGVzEhIKCkRvdWJs",
            "ZURhdGEYASADKAESEQoJRmxvYXREYXRhGAIgAygCEhIKClVJbnQzMkRhdGEY",
            "AyADKAcSEgoKVUludDY0RGF0YRgEIAMoBhIRCglJbnQzMkRhdGEYBSADKA8S",
            "EQoJSW50NjREYXRhGAYgAygQEhAKCEJvb2xEYXRhGAcgAygIEhYKDlVURjhT",
            "dHJpbmdEYXRhGAggAygJEicKCEVudW1EYXRhGAkgAygOMhUuVGVzdFNlcnZp",
            "Y2UuRW51bVR5cGUi6wEKCEFsbFR5cGVzEhIKCkRvdWJsZURhdGEYASABKAES",
            "EQoJRmxvYXREYXRhGAIgASgCEhIKClVJbnQzMkRhdGEYAyABKAUSEgoKVUlu",
            "dDY0RGF0YRgEIAEoAxIRCglJbnQzMkRhdGEYBSABKBESEQoJSW50NjREYXRh",
            "GAYgASgSEhAKCEJvb2xEYXRhGAcgASgIEhYKDlVURjhTdHJpbmdEYXRhGAgg",
            "ASgJEhcKD0FycmF5T2ZCeXRlRGF0YRgJIAEoDBInCghFbnVtRGF0YRgKIAEo",
            "DjIVLlRlc3RTZXJ2aWNlLkVudW1UeXBlIhoKClN0cmVhbUluZm8SDAoESW5m",
            "bxgBIAEoCSIaCgpJbmZvU3RyaW5nEgwKBEluZm8YASABKAkiPwoKU3RyZWFt",
            "RGF0YRIMCgREYXRhGAEgASgMEhAKCERhdGFUeXBlGAIgASgPEhEKCUV4dHJh",
            "SW5mbxgDIAEoCSonCghFbnVtVHlwZRIHCgNPbmUQABIHCgNUd28QARIJCgVU",
            "aHJlZRACMvwGCgtUZXN0U2VydmljZRI+Cg1DaGVja0FsbFR5cGVzEhYuZ29v",
            "Z2xlLnByb3RvYnVmLkVtcHR5GhUuVGVzdFNlcnZpY2UuQWxsVHlwZXMSOAoJ",
            "T25lU2ltcGxlEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GhMuVGVzdFNlcnZp",
            "Y2UuU2ltcGxlEjgKDERvdWJsZVNpbXBsZRITLlRlc3RTZXJ2aWNlLlNpbXBs",
            "ZRoTLlRlc3RTZXJ2aWNlLlNpbXBsZRI5CgpTYXZlU2ltcGxlEhMuVGVzdFNl",
            "cnZpY2UuU2ltcGxlGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Ej8KCVJlcFNp",
            "bXBsZRIYLlRlc3RTZXJ2aWNlLlJlcEFsbFR5cGVzGhguVGVzdFNlcnZpY2Uu",
            "UmVwQWxsVHlwZXMSUQoVRW1iZWRkZWRNZXNzYWdlU2ltcGxlEhsuVGVzdFNl",
            "cnZpY2UuRW1iZWRkZWRTaW1wbGUaGy5UZXN0U2VydmljZS5FbWJlZGRlZFNp",
            "bXBsZRJUChZFbWJlZGRlZE1lc3NhZ2VDb21wbGV4EhwuVGVzdFNlcnZpY2Uu",
            "RW1iZWRkZWRDb21wbGV4GhwuVGVzdFNlcnZpY2UuRW1iZWRkZWRDb21wbGV4",
            "Ej4KDVJldHVybkFueVR5cGUSFy5UZXN0U2VydmljZS5JbmZvU3RyaW5nGhQu",
            "Z29vZ2xlLnByb3RvYnVmLkFueRJACgtCZWdpblN0cmVhbRIWLmdvb2dsZS5w",
            "cm90b2J1Zi5FbXB0eRoXLlRlc3RTZXJ2aWNlLlN0cmVhbURhdGEwARJDCg1C",
            "ZWdpblN0cmVhbUV4EhcuVGVzdFNlcnZpY2UuU3RyZWFtSW5mbxoXLlRlc3RT",
            "ZXJ2aWNlLlN0cmVhbURhdGEwARJBCgxDbGllbnRTdHJlYW0SFy5UZXN0U2Vy",
            "dmljZS5TdHJlYW1EYXRhGhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5KAESRAoO",
            "Q2xpZW50U3RyZWFtRXgSFy5UZXN0U2VydmljZS5TdHJlYW1EYXRhGhcuVGVz",
            "dFNlcnZpY2UuU3RyZWFtSW5mbygBEkQKDER1cGxleFN0cmVhbRIXLlRlc3RT",
            "ZXJ2aWNlLlN0cmVhbUluZm8aFy5UZXN0U2VydmljZS5TdHJlYW1EYXRhKAEw",
            "AUISqgIPZ1JQQ1NlcnZpY2UuTkVUYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::gRPCService.NET.EnumType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.EmbeddedSimple), global::gRPCService.NET.EmbeddedSimple.Parser, new[]{ "TypeName", "SimpleData", "StreamInfoArray" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.EmbeddedComplex), global::gRPCService.NET.EmbeddedComplex.Parser, new[]{ "ComplexInfo", "ComplexData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.Simple), global::gRPCService.NET.Simple.Parser, new[]{ "Name", "ID", "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.ComplexStruct), global::gRPCService.NET.ComplexStruct.Parser, new[]{ "RawData", "DataInfo", "DataID", "SimpleData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.RepAllTypes), global::gRPCService.NET.RepAllTypes.Parser, new[]{ "DoubleData", "FloatData", "UInt32Data", "UInt64Data", "Int32Data", "Int64Data", "BoolData", "UTF8StringData", "EnumData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.AllTypes), global::gRPCService.NET.AllTypes.Parser, new[]{ "DoubleData", "FloatData", "UInt32Data", "UInt64Data", "Int32Data", "Int64Data", "BoolData", "UTF8StringData", "ArrayOfByteData", "EnumData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.StreamInfo), global::gRPCService.NET.StreamInfo.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.InfoString), global::gRPCService.NET.InfoString.Parser, new[]{ "Info" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::gRPCService.NET.StreamData), global::gRPCService.NET.StreamData.Parser, new[]{ "Data", "DataType", "ExtraInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EnumType {
    [pbr::OriginalName("One")] One = 0,
    [pbr::OriginalName("Two")] Two = 1,
    [pbr::OriginalName("Three")] Three = 2,
  }

  #endregion

  #region Messages
  public sealed partial class EmbeddedSimple : pb::IMessage<EmbeddedSimple>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EmbeddedSimple> _parser = new pb::MessageParser<EmbeddedSimple>(() => new EmbeddedSimple());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmbeddedSimple> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedSimple() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedSimple(EmbeddedSimple other) : this() {
      typeName_ = other.typeName_;
      simpleData_ = other.simpleData_ != null ? other.simpleData_.Clone() : null;
      streamInfoArray_ = other.streamInfoArray_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedSimple Clone() {
      return new EmbeddedSimple(this);
    }

    /// <summary>Field number for the "TypeName" field.</summary>
    public const int TypeNameFieldNumber = 1;
    private string typeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeName {
      get { return typeName_; }
      set {
        typeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SimpleData" field.</summary>
    public const int SimpleDataFieldNumber = 2;
    private global::gRPCService.NET.Simple simpleData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCService.NET.Simple SimpleData {
      get { return simpleData_; }
      set {
        simpleData_ = value;
      }
    }

    /// <summary>Field number for the "StreamInfoArray" field.</summary>
    public const int StreamInfoArrayFieldNumber = 3;
    private static readonly pb::FieldCodec<global::gRPCService.NET.StreamInfo> _repeated_streamInfoArray_codec
        = pb::FieldCodec.ForMessage(26, global::gRPCService.NET.StreamInfo.Parser);
    private readonly pbc::RepeatedField<global::gRPCService.NET.StreamInfo> streamInfoArray_ = new pbc::RepeatedField<global::gRPCService.NET.StreamInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::gRPCService.NET.StreamInfo> StreamInfoArray {
      get { return streamInfoArray_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmbeddedSimple);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmbeddedSimple other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TypeName != other.TypeName) return false;
      if (!object.Equals(SimpleData, other.SimpleData)) return false;
      if(!streamInfoArray_.Equals(other.streamInfoArray_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TypeName.Length != 0) hash ^= TypeName.GetHashCode();
      if (simpleData_ != null) hash ^= SimpleData.GetHashCode();
      hash ^= streamInfoArray_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TypeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TypeName);
      }
      if (simpleData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SimpleData);
      }
      streamInfoArray_.WriteTo(output, _repeated_streamInfoArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TypeName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TypeName);
      }
      if (simpleData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SimpleData);
      }
      streamInfoArray_.WriteTo(ref output, _repeated_streamInfoArray_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeName);
      }
      if (simpleData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimpleData);
      }
      size += streamInfoArray_.CalculateSize(_repeated_streamInfoArray_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmbeddedSimple other) {
      if (other == null) {
        return;
      }
      if (other.TypeName.Length != 0) {
        TypeName = other.TypeName;
      }
      if (other.simpleData_ != null) {
        if (simpleData_ == null) {
          SimpleData = new global::gRPCService.NET.Simple();
        }
        SimpleData.MergeFrom(other.SimpleData);
      }
      streamInfoArray_.Add(other.streamInfoArray_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TypeName = input.ReadString();
            break;
          }
          case 18: {
            if (simpleData_ == null) {
              SimpleData = new global::gRPCService.NET.Simple();
            }
            input.ReadMessage(SimpleData);
            break;
          }
          case 26: {
            streamInfoArray_.AddEntriesFrom(input, _repeated_streamInfoArray_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TypeName = input.ReadString();
            break;
          }
          case 18: {
            if (simpleData_ == null) {
              SimpleData = new global::gRPCService.NET.Simple();
            }
            input.ReadMessage(SimpleData);
            break;
          }
          case 26: {
            streamInfoArray_.AddEntriesFrom(ref input, _repeated_streamInfoArray_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EmbeddedComplex : pb::IMessage<EmbeddedComplex>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EmbeddedComplex> _parser = new pb::MessageParser<EmbeddedComplex>(() => new EmbeddedComplex());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmbeddedComplex> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedComplex() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedComplex(EmbeddedComplex other) : this() {
      complexInfo_ = other.complexInfo_;
      complexData_ = other.complexData_ != null ? other.complexData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmbeddedComplex Clone() {
      return new EmbeddedComplex(this);
    }

    /// <summary>Field number for the "ComplexInfo" field.</summary>
    public const int ComplexInfoFieldNumber = 1;
    private string complexInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComplexInfo {
      get { return complexInfo_; }
      set {
        complexInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ComplexData" field.</summary>
    public const int ComplexDataFieldNumber = 2;
    private global::gRPCService.NET.ComplexStruct complexData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCService.NET.ComplexStruct ComplexData {
      get { return complexData_; }
      set {
        complexData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmbeddedComplex);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmbeddedComplex other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ComplexInfo != other.ComplexInfo) return false;
      if (!object.Equals(ComplexData, other.ComplexData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ComplexInfo.Length != 0) hash ^= ComplexInfo.GetHashCode();
      if (complexData_ != null) hash ^= ComplexData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ComplexInfo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ComplexInfo);
      }
      if (complexData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ComplexData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ComplexInfo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ComplexInfo);
      }
      if (complexData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ComplexData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ComplexInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComplexInfo);
      }
      if (complexData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ComplexData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmbeddedComplex other) {
      if (other == null) {
        return;
      }
      if (other.ComplexInfo.Length != 0) {
        ComplexInfo = other.ComplexInfo;
      }
      if (other.complexData_ != null) {
        if (complexData_ == null) {
          ComplexData = new global::gRPCService.NET.ComplexStruct();
        }
        ComplexData.MergeFrom(other.ComplexData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ComplexInfo = input.ReadString();
            break;
          }
          case 18: {
            if (complexData_ == null) {
              ComplexData = new global::gRPCService.NET.ComplexStruct();
            }
            input.ReadMessage(ComplexData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ComplexInfo = input.ReadString();
            break;
          }
          case 18: {
            if (complexData_ == null) {
              ComplexData = new global::gRPCService.NET.ComplexStruct();
            }
            input.ReadMessage(ComplexData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Simple : pb::IMessage<Simple>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Simple> _parser = new pb::MessageParser<Simple>(() => new Simple());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Simple> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Simple() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Simple(Simple other) : this() {
      name_ = other.name_;
      iD_ = other.iD_;
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Simple Clone() {
      return new Simple(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 2;
    private int iD_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ID {
      get { return iD_; }
      set {
        iD_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 3;
    private pb::ByteString info_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Simple);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Simple other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ID != other.ID) return false;
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ID != 0) hash ^= ID.GetHashCode();
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ID);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ID);
      }
      if (Info.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ID);
      }
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Simple other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ID != 0) {
        ID = other.ID;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            ID = input.ReadInt32();
            break;
          }
          case 26: {
            Info = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            ID = input.ReadInt32();
            break;
          }
          case 26: {
            Info = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ComplexStruct : pb::IMessage<ComplexStruct>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ComplexStruct> _parser = new pb::MessageParser<ComplexStruct>(() => new ComplexStruct());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ComplexStruct> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComplexStruct() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComplexStruct(ComplexStruct other) : this() {
      rawData_ = other.rawData_;
      dataInfo_ = other.dataInfo_;
      dataID_ = other.dataID_;
      simpleData_ = other.simpleData_ != null ? other.simpleData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ComplexStruct Clone() {
      return new ComplexStruct(this);
    }

    /// <summary>Field number for the "RawData" field.</summary>
    public const int RawDataFieldNumber = 1;
    private pb::ByteString rawData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RawData {
      get { return rawData_; }
      set {
        rawData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DataInfo" field.</summary>
    public const int DataInfoFieldNumber = 2;
    private string dataInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataInfo {
      get { return dataInfo_; }
      set {
        dataInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DataID" field.</summary>
    public const int DataIDFieldNumber = 3;
    private uint dataID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint DataID {
      get { return dataID_; }
      set {
        dataID_ = value;
      }
    }

    /// <summary>Field number for the "SimpleData" field.</summary>
    public const int SimpleDataFieldNumber = 4;
    private global::gRPCService.NET.Simple simpleData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCService.NET.Simple SimpleData {
      get { return simpleData_; }
      set {
        simpleData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ComplexStruct);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ComplexStruct other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RawData != other.RawData) return false;
      if (DataInfo != other.DataInfo) return false;
      if (DataID != other.DataID) return false;
      if (!object.Equals(SimpleData, other.SimpleData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RawData.Length != 0) hash ^= RawData.GetHashCode();
      if (DataInfo.Length != 0) hash ^= DataInfo.GetHashCode();
      if (DataID != 0) hash ^= DataID.GetHashCode();
      if (simpleData_ != null) hash ^= SimpleData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RawData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RawData);
      }
      if (DataInfo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DataInfo);
      }
      if (DataID != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(DataID);
      }
      if (simpleData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SimpleData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RawData.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(RawData);
      }
      if (DataInfo.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DataInfo);
      }
      if (DataID != 0) {
        output.WriteRawTag(29);
        output.WriteFixed32(DataID);
      }
      if (simpleData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SimpleData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RawData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RawData);
      }
      if (DataInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataInfo);
      }
      if (DataID != 0) {
        size += 1 + 4;
      }
      if (simpleData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimpleData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ComplexStruct other) {
      if (other == null) {
        return;
      }
      if (other.RawData.Length != 0) {
        RawData = other.RawData;
      }
      if (other.DataInfo.Length != 0) {
        DataInfo = other.DataInfo;
      }
      if (other.DataID != 0) {
        DataID = other.DataID;
      }
      if (other.simpleData_ != null) {
        if (simpleData_ == null) {
          SimpleData = new global::gRPCService.NET.Simple();
        }
        SimpleData.MergeFrom(other.SimpleData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RawData = input.ReadBytes();
            break;
          }
          case 18: {
            DataInfo = input.ReadString();
            break;
          }
          case 29: {
            DataID = input.ReadFixed32();
            break;
          }
          case 34: {
            if (simpleData_ == null) {
              SimpleData = new global::gRPCService.NET.Simple();
            }
            input.ReadMessage(SimpleData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RawData = input.ReadBytes();
            break;
          }
          case 18: {
            DataInfo = input.ReadString();
            break;
          }
          case 29: {
            DataID = input.ReadFixed32();
            break;
          }
          case 34: {
            if (simpleData_ == null) {
              SimpleData = new global::gRPCService.NET.Simple();
            }
            input.ReadMessage(SimpleData);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RepAllTypes : pb::IMessage<RepAllTypes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RepAllTypes> _parser = new pb::MessageParser<RepAllTypes>(() => new RepAllTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RepAllTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepAllTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepAllTypes(RepAllTypes other) : this() {
      doubleData_ = other.doubleData_.Clone();
      floatData_ = other.floatData_.Clone();
      uInt32Data_ = other.uInt32Data_.Clone();
      uInt64Data_ = other.uInt64Data_.Clone();
      int32Data_ = other.int32Data_.Clone();
      int64Data_ = other.int64Data_.Clone();
      boolData_ = other.boolData_.Clone();
      uTF8StringData_ = other.uTF8StringData_.Clone();
      enumData_ = other.enumData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RepAllTypes Clone() {
      return new RepAllTypes(this);
    }

    /// <summary>Field number for the "DoubleData" field.</summary>
    public const int DoubleDataFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_doubleData_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> doubleData_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> DoubleData {
      get { return doubleData_; }
    }

    /// <summary>Field number for the "FloatData" field.</summary>
    public const int FloatDataFieldNumber = 2;
    private static readonly pb::FieldCodec<float> _repeated_floatData_codec
        = pb::FieldCodec.ForFloat(18);
    private readonly pbc::RepeatedField<float> floatData_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> FloatData {
      get { return floatData_; }
    }

    /// <summary>Field number for the "UInt32Data" field.</summary>
    public const int UInt32DataFieldNumber = 3;
    private static readonly pb::FieldCodec<uint> _repeated_uInt32Data_codec
        = pb::FieldCodec.ForFixed32(26);
    private readonly pbc::RepeatedField<uint> uInt32Data_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> UInt32Data {
      get { return uInt32Data_; }
    }

    /// <summary>Field number for the "UInt64Data" field.</summary>
    public const int UInt64DataFieldNumber = 4;
    private static readonly pb::FieldCodec<ulong> _repeated_uInt64Data_codec
        = pb::FieldCodec.ForFixed64(34);
    private readonly pbc::RepeatedField<ulong> uInt64Data_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> UInt64Data {
      get { return uInt64Data_; }
    }

    /// <summary>Field number for the "Int32Data" field.</summary>
    public const int Int32DataFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_int32Data_codec
        = pb::FieldCodec.ForSFixed32(42);
    private readonly pbc::RepeatedField<int> int32Data_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Int32Data {
      get { return int32Data_; }
    }

    /// <summary>Field number for the "Int64Data" field.</summary>
    public const int Int64DataFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_int64Data_codec
        = pb::FieldCodec.ForSFixed64(50);
    private readonly pbc::RepeatedField<long> int64Data_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Int64Data {
      get { return int64Data_; }
    }

    /// <summary>Field number for the "BoolData" field.</summary>
    public const int BoolDataFieldNumber = 7;
    private static readonly pb::FieldCodec<bool> _repeated_boolData_codec
        = pb::FieldCodec.ForBool(58);
    private readonly pbc::RepeatedField<bool> boolData_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> BoolData {
      get { return boolData_; }
    }

    /// <summary>Field number for the "UTF8StringData" field.</summary>
    public const int UTF8StringDataFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_uTF8StringData_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> uTF8StringData_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UTF8StringData {
      get { return uTF8StringData_; }
    }

    /// <summary>Field number for the "EnumData" field.</summary>
    public const int EnumDataFieldNumber = 9;
    private static readonly pb::FieldCodec<global::gRPCService.NET.EnumType> _repeated_enumData_codec
        = pb::FieldCodec.ForEnum(74, x => (int) x, x => (global::gRPCService.NET.EnumType) x);
    private readonly pbc::RepeatedField<global::gRPCService.NET.EnumType> enumData_ = new pbc::RepeatedField<global::gRPCService.NET.EnumType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::gRPCService.NET.EnumType> EnumData {
      get { return enumData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RepAllTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RepAllTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!doubleData_.Equals(other.doubleData_)) return false;
      if(!floatData_.Equals(other.floatData_)) return false;
      if(!uInt32Data_.Equals(other.uInt32Data_)) return false;
      if(!uInt64Data_.Equals(other.uInt64Data_)) return false;
      if(!int32Data_.Equals(other.int32Data_)) return false;
      if(!int64Data_.Equals(other.int64Data_)) return false;
      if(!boolData_.Equals(other.boolData_)) return false;
      if(!uTF8StringData_.Equals(other.uTF8StringData_)) return false;
      if(!enumData_.Equals(other.enumData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= doubleData_.GetHashCode();
      hash ^= floatData_.GetHashCode();
      hash ^= uInt32Data_.GetHashCode();
      hash ^= uInt64Data_.GetHashCode();
      hash ^= int32Data_.GetHashCode();
      hash ^= int64Data_.GetHashCode();
      hash ^= boolData_.GetHashCode();
      hash ^= uTF8StringData_.GetHashCode();
      hash ^= enumData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      doubleData_.WriteTo(output, _repeated_doubleData_codec);
      floatData_.WriteTo(output, _repeated_floatData_codec);
      uInt32Data_.WriteTo(output, _repeated_uInt32Data_codec);
      uInt64Data_.WriteTo(output, _repeated_uInt64Data_codec);
      int32Data_.WriteTo(output, _repeated_int32Data_codec);
      int64Data_.WriteTo(output, _repeated_int64Data_codec);
      boolData_.WriteTo(output, _repeated_boolData_codec);
      uTF8StringData_.WriteTo(output, _repeated_uTF8StringData_codec);
      enumData_.WriteTo(output, _repeated_enumData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      doubleData_.WriteTo(ref output, _repeated_doubleData_codec);
      floatData_.WriteTo(ref output, _repeated_floatData_codec);
      uInt32Data_.WriteTo(ref output, _repeated_uInt32Data_codec);
      uInt64Data_.WriteTo(ref output, _repeated_uInt64Data_codec);
      int32Data_.WriteTo(ref output, _repeated_int32Data_codec);
      int64Data_.WriteTo(ref output, _repeated_int64Data_codec);
      boolData_.WriteTo(ref output, _repeated_boolData_codec);
      uTF8StringData_.WriteTo(ref output, _repeated_uTF8StringData_codec);
      enumData_.WriteTo(ref output, _repeated_enumData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += doubleData_.CalculateSize(_repeated_doubleData_codec);
      size += floatData_.CalculateSize(_repeated_floatData_codec);
      size += uInt32Data_.CalculateSize(_repeated_uInt32Data_codec);
      size += uInt64Data_.CalculateSize(_repeated_uInt64Data_codec);
      size += int32Data_.CalculateSize(_repeated_int32Data_codec);
      size += int64Data_.CalculateSize(_repeated_int64Data_codec);
      size += boolData_.CalculateSize(_repeated_boolData_codec);
      size += uTF8StringData_.CalculateSize(_repeated_uTF8StringData_codec);
      size += enumData_.CalculateSize(_repeated_enumData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RepAllTypes other) {
      if (other == null) {
        return;
      }
      doubleData_.Add(other.doubleData_);
      floatData_.Add(other.floatData_);
      uInt32Data_.Add(other.uInt32Data_);
      uInt64Data_.Add(other.uInt64Data_);
      int32Data_.Add(other.int32Data_);
      int64Data_.Add(other.int64Data_);
      boolData_.Add(other.boolData_);
      uTF8StringData_.Add(other.uTF8StringData_);
      enumData_.Add(other.enumData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            doubleData_.AddEntriesFrom(input, _repeated_doubleData_codec);
            break;
          }
          case 18:
          case 21: {
            floatData_.AddEntriesFrom(input, _repeated_floatData_codec);
            break;
          }
          case 26:
          case 29: {
            uInt32Data_.AddEntriesFrom(input, _repeated_uInt32Data_codec);
            break;
          }
          case 34:
          case 33: {
            uInt64Data_.AddEntriesFrom(input, _repeated_uInt64Data_codec);
            break;
          }
          case 42:
          case 45: {
            int32Data_.AddEntriesFrom(input, _repeated_int32Data_codec);
            break;
          }
          case 50:
          case 49: {
            int64Data_.AddEntriesFrom(input, _repeated_int64Data_codec);
            break;
          }
          case 58:
          case 56: {
            boolData_.AddEntriesFrom(input, _repeated_boolData_codec);
            break;
          }
          case 66: {
            uTF8StringData_.AddEntriesFrom(input, _repeated_uTF8StringData_codec);
            break;
          }
          case 74:
          case 72: {
            enumData_.AddEntriesFrom(input, _repeated_enumData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 9: {
            doubleData_.AddEntriesFrom(ref input, _repeated_doubleData_codec);
            break;
          }
          case 18:
          case 21: {
            floatData_.AddEntriesFrom(ref input, _repeated_floatData_codec);
            break;
          }
          case 26:
          case 29: {
            uInt32Data_.AddEntriesFrom(ref input, _repeated_uInt32Data_codec);
            break;
          }
          case 34:
          case 33: {
            uInt64Data_.AddEntriesFrom(ref input, _repeated_uInt64Data_codec);
            break;
          }
          case 42:
          case 45: {
            int32Data_.AddEntriesFrom(ref input, _repeated_int32Data_codec);
            break;
          }
          case 50:
          case 49: {
            int64Data_.AddEntriesFrom(ref input, _repeated_int64Data_codec);
            break;
          }
          case 58:
          case 56: {
            boolData_.AddEntriesFrom(ref input, _repeated_boolData_codec);
            break;
          }
          case 66: {
            uTF8StringData_.AddEntriesFrom(ref input, _repeated_uTF8StringData_codec);
            break;
          }
          case 74:
          case 72: {
            enumData_.AddEntriesFrom(ref input, _repeated_enumData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AllTypes : pb::IMessage<AllTypes>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AllTypes> _parser = new pb::MessageParser<AllTypes>(() => new AllTypes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllTypes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTypes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTypes(AllTypes other) : this() {
      doubleData_ = other.doubleData_;
      floatData_ = other.floatData_;
      uInt32Data_ = other.uInt32Data_;
      uInt64Data_ = other.uInt64Data_;
      int32Data_ = other.int32Data_;
      int64Data_ = other.int64Data_;
      boolData_ = other.boolData_;
      uTF8StringData_ = other.uTF8StringData_;
      arrayOfByteData_ = other.arrayOfByteData_;
      enumData_ = other.enumData_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllTypes Clone() {
      return new AllTypes(this);
    }

    /// <summary>Field number for the "DoubleData" field.</summary>
    public const int DoubleDataFieldNumber = 1;
    private double doubleData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleData {
      get { return doubleData_; }
      set {
        doubleData_ = value;
      }
    }

    /// <summary>Field number for the "FloatData" field.</summary>
    public const int FloatDataFieldNumber = 2;
    private float floatData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FloatData {
      get { return floatData_; }
      set {
        floatData_ = value;
      }
    }

    /// <summary>Field number for the "UInt32Data" field.</summary>
    public const int UInt32DataFieldNumber = 3;
    private int uInt32Data_;
    /// <summary>
    ///	fixed32 UInt32Data = 3;
    ///	fixed64 UInt64Data = 4;
    ///	sfixed32 Int32Data = 5;
    ///	sfixed64 Int64Data = 6;	
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UInt32Data {
      get { return uInt32Data_; }
      set {
        uInt32Data_ = value;
      }
    }

    /// <summary>Field number for the "UInt64Data" field.</summary>
    public const int UInt64DataFieldNumber = 4;
    private long uInt64Data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UInt64Data {
      get { return uInt64Data_; }
      set {
        uInt64Data_ = value;
      }
    }

    /// <summary>Field number for the "Int32Data" field.</summary>
    public const int Int32DataFieldNumber = 5;
    private int int32Data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int32Data {
      get { return int32Data_; }
      set {
        int32Data_ = value;
      }
    }

    /// <summary>Field number for the "Int64Data" field.</summary>
    public const int Int64DataFieldNumber = 6;
    private long int64Data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int64Data {
      get { return int64Data_; }
      set {
        int64Data_ = value;
      }
    }

    /// <summary>Field number for the "BoolData" field.</summary>
    public const int BoolDataFieldNumber = 7;
    private bool boolData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolData {
      get { return boolData_; }
      set {
        boolData_ = value;
      }
    }

    /// <summary>Field number for the "UTF8StringData" field.</summary>
    public const int UTF8StringDataFieldNumber = 8;
    private string uTF8StringData_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UTF8StringData {
      get { return uTF8StringData_; }
      set {
        uTF8StringData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ArrayOfByteData" field.</summary>
    public const int ArrayOfByteDataFieldNumber = 9;
    private pb::ByteString arrayOfByteData_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ArrayOfByteData {
      get { return arrayOfByteData_; }
      set {
        arrayOfByteData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EnumData" field.</summary>
    public const int EnumDataFieldNumber = 10;
    private global::gRPCService.NET.EnumType enumData_ = global::gRPCService.NET.EnumType.One;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::gRPCService.NET.EnumType EnumData {
      get { return enumData_; }
      set {
        enumData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllTypes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllTypes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleData, other.DoubleData)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatData, other.FloatData)) return false;
      if (UInt32Data != other.UInt32Data) return false;
      if (UInt64Data != other.UInt64Data) return false;
      if (Int32Data != other.Int32Data) return false;
      if (Int64Data != other.Int64Data) return false;
      if (BoolData != other.BoolData) return false;
      if (UTF8StringData != other.UTF8StringData) return false;
      if (ArrayOfByteData != other.ArrayOfByteData) return false;
      if (EnumData != other.EnumData) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DoubleData != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleData);
      if (FloatData != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatData);
      if (UInt32Data != 0) hash ^= UInt32Data.GetHashCode();
      if (UInt64Data != 0L) hash ^= UInt64Data.GetHashCode();
      if (Int32Data != 0) hash ^= Int32Data.GetHashCode();
      if (Int64Data != 0L) hash ^= Int64Data.GetHashCode();
      if (BoolData != false) hash ^= BoolData.GetHashCode();
      if (UTF8StringData.Length != 0) hash ^= UTF8StringData.GetHashCode();
      if (ArrayOfByteData.Length != 0) hash ^= ArrayOfByteData.GetHashCode();
      if (EnumData != global::gRPCService.NET.EnumType.One) hash ^= EnumData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DoubleData != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(DoubleData);
      }
      if (FloatData != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FloatData);
      }
      if (UInt32Data != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UInt32Data);
      }
      if (UInt64Data != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(UInt64Data);
      }
      if (Int32Data != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Int32Data);
      }
      if (Int64Data != 0L) {
        output.WriteRawTag(48);
        output.WriteSInt64(Int64Data);
      }
      if (BoolData != false) {
        output.WriteRawTag(56);
        output.WriteBool(BoolData);
      }
      if (UTF8StringData.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UTF8StringData);
      }
      if (ArrayOfByteData.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(ArrayOfByteData);
      }
      if (EnumData != global::gRPCService.NET.EnumType.One) {
        output.WriteRawTag(80);
        output.WriteEnum((int) EnumData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DoubleData != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(DoubleData);
      }
      if (FloatData != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(FloatData);
      }
      if (UInt32Data != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(UInt32Data);
      }
      if (UInt64Data != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(UInt64Data);
      }
      if (Int32Data != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Int32Data);
      }
      if (Int64Data != 0L) {
        output.WriteRawTag(48);
        output.WriteSInt64(Int64Data);
      }
      if (BoolData != false) {
        output.WriteRawTag(56);
        output.WriteBool(BoolData);
      }
      if (UTF8StringData.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UTF8StringData);
      }
      if (ArrayOfByteData.Length != 0) {
        output.WriteRawTag(74);
        output.WriteBytes(ArrayOfByteData);
      }
      if (EnumData != global::gRPCService.NET.EnumType.One) {
        output.WriteRawTag(80);
        output.WriteEnum((int) EnumData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DoubleData != 0D) {
        size += 1 + 8;
      }
      if (FloatData != 0F) {
        size += 1 + 4;
      }
      if (UInt32Data != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UInt32Data);
      }
      if (UInt64Data != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UInt64Data);
      }
      if (Int32Data != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Int32Data);
      }
      if (Int64Data != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Int64Data);
      }
      if (BoolData != false) {
        size += 1 + 1;
      }
      if (UTF8StringData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UTF8StringData);
      }
      if (ArrayOfByteData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ArrayOfByteData);
      }
      if (EnumData != global::gRPCService.NET.EnumType.One) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnumData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllTypes other) {
      if (other == null) {
        return;
      }
      if (other.DoubleData != 0D) {
        DoubleData = other.DoubleData;
      }
      if (other.FloatData != 0F) {
        FloatData = other.FloatData;
      }
      if (other.UInt32Data != 0) {
        UInt32Data = other.UInt32Data;
      }
      if (other.UInt64Data != 0L) {
        UInt64Data = other.UInt64Data;
      }
      if (other.Int32Data != 0) {
        Int32Data = other.Int32Data;
      }
      if (other.Int64Data != 0L) {
        Int64Data = other.Int64Data;
      }
      if (other.BoolData != false) {
        BoolData = other.BoolData;
      }
      if (other.UTF8StringData.Length != 0) {
        UTF8StringData = other.UTF8StringData;
      }
      if (other.ArrayOfByteData.Length != 0) {
        ArrayOfByteData = other.ArrayOfByteData;
      }
      if (other.EnumData != global::gRPCService.NET.EnumType.One) {
        EnumData = other.EnumData;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            DoubleData = input.ReadDouble();
            break;
          }
          case 21: {
            FloatData = input.ReadFloat();
            break;
          }
          case 24: {
            UInt32Data = input.ReadInt32();
            break;
          }
          case 32: {
            UInt64Data = input.ReadInt64();
            break;
          }
          case 40: {
            Int32Data = input.ReadSInt32();
            break;
          }
          case 48: {
            Int64Data = input.ReadSInt64();
            break;
          }
          case 56: {
            BoolData = input.ReadBool();
            break;
          }
          case 66: {
            UTF8StringData = input.ReadString();
            break;
          }
          case 74: {
            ArrayOfByteData = input.ReadBytes();
            break;
          }
          case 80: {
            EnumData = (global::gRPCService.NET.EnumType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            DoubleData = input.ReadDouble();
            break;
          }
          case 21: {
            FloatData = input.ReadFloat();
            break;
          }
          case 24: {
            UInt32Data = input.ReadInt32();
            break;
          }
          case 32: {
            UInt64Data = input.ReadInt64();
            break;
          }
          case 40: {
            Int32Data = input.ReadSInt32();
            break;
          }
          case 48: {
            Int64Data = input.ReadSInt64();
            break;
          }
          case 56: {
            BoolData = input.ReadBool();
            break;
          }
          case 66: {
            UTF8StringData = input.ReadString();
            break;
          }
          case 74: {
            ArrayOfByteData = input.ReadBytes();
            break;
          }
          case 80: {
            EnumData = (global::gRPCService.NET.EnumType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamInfo : pb::IMessage<StreamInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamInfo> _parser = new pb::MessageParser<StreamInfo>(() => new StreamInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInfo(StreamInfo other) : this() {
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInfo Clone() {
      return new StreamInfo(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Info.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Info.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamInfo other) {
      if (other == null) {
        return;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class InfoString : pb::IMessage<InfoString>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoString> _parser = new pb::MessageParser<InfoString>(() => new InfoString());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InfoString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoString(InfoString other) : this() {
      info_ = other.info_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InfoString Clone() {
      return new InfoString(this);
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 1;
    private string info_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Info {
      get { return info_; }
      set {
        info_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InfoString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InfoString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Info != other.Info) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Info.Length != 0) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Info.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Info.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Info.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InfoString other) {
      if (other == null) {
        return;
      }
      if (other.Info.Length != 0) {
        Info = other.Info;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Info = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StreamData : pb::IMessage<StreamData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StreamData> _parser = new pb::MessageParser<StreamData>(() => new StreamData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamData(StreamData other) : this() {
      data_ = other.data_;
      dataType_ = other.dataType_;
      extraInfo_ = other.extraInfo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamData Clone() {
      return new StreamData(this);
    }

    /// <summary>Field number for the "Data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DataType" field.</summary>
    public const int DataTypeFieldNumber = 2;
    private int dataType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DataType {
      get { return dataType_; }
      set {
        dataType_ = value;
      }
    }

    /// <summary>Field number for the "ExtraInfo" field.</summary>
    public const int ExtraInfoFieldNumber = 3;
    private string extraInfo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExtraInfo {
      get { return extraInfo_; }
      set {
        extraInfo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (DataType != other.DataType) return false;
      if (ExtraInfo != other.ExtraInfo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (DataType != 0) hash ^= DataType.GetHashCode();
      if (ExtraInfo.Length != 0) hash ^= ExtraInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (DataType != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(DataType);
      }
      if (ExtraInfo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExtraInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (DataType != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(DataType);
      }
      if (ExtraInfo.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExtraInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (DataType != 0) {
        size += 1 + 4;
      }
      if (ExtraInfo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExtraInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamData other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.DataType != 0) {
        DataType = other.DataType;
      }
      if (other.ExtraInfo.Length != 0) {
        ExtraInfo = other.ExtraInfo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 21: {
            DataType = input.ReadSFixed32();
            break;
          }
          case 26: {
            ExtraInfo = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 21: {
            DataType = input.ReadSFixed32();
            break;
          }
          case 26: {
            ExtraInfo = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
