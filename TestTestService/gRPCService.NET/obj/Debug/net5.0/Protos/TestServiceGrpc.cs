// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/TestService.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPCService.NET {
  public static partial class TestService
  {
    static readonly string __ServiceName = "TestService.TestService";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Empty.Parser));
    static readonly grpc::Marshaller<global::gRPCService.NET.AllTypes> __Marshaller_TestService_AllTypes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCService.NET.AllTypes.Parser));
    static readonly grpc::Marshaller<global::gRPCService.NET.Simple> __Marshaller_TestService_Simple = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCService.NET.Simple.Parser));
    static readonly grpc::Marshaller<global::gRPCService.NET.RepAllTypes> __Marshaller_TestService_RepAllTypes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCService.NET.RepAllTypes.Parser));
    static readonly grpc::Marshaller<global::gRPCService.NET.EmbeddedSimple> __Marshaller_TestService_EmbeddedSimple = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCService.NET.EmbeddedSimple.Parser));
    static readonly grpc::Marshaller<global::gRPCService.NET.EmbeddedComplex> __Marshaller_TestService_EmbeddedComplex = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCService.NET.EmbeddedComplex.Parser));
    static readonly grpc::Marshaller<global::gRPCService.NET.InfoString> __Marshaller_TestService_InfoString = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCService.NET.InfoString.Parser));
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Any> __Marshaller_google_protobuf_Any = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Google.Protobuf.WellKnownTypes.Any.Parser));
    static readonly grpc::Marshaller<global::gRPCService.NET.StreamData> __Marshaller_TestService_StreamData = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCService.NET.StreamData.Parser));
    static readonly grpc::Marshaller<global::gRPCService.NET.StreamInfo> __Marshaller_TestService_StreamInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::gRPCService.NET.StreamInfo.Parser));

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.AllTypes> __Method_CheckAllTypes = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.AllTypes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckAllTypes",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_TestService_AllTypes);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.Simple> __Method_OneSimple = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.Simple>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OneSimple",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_TestService_Simple);

    static readonly grpc::Method<global::gRPCService.NET.Simple, global::gRPCService.NET.Simple> __Method_DoubleSimple = new grpc::Method<global::gRPCService.NET.Simple, global::gRPCService.NET.Simple>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DoubleSimple",
        __Marshaller_TestService_Simple,
        __Marshaller_TestService_Simple);

    static readonly grpc::Method<global::gRPCService.NET.Simple, global::Google.Protobuf.WellKnownTypes.Empty> __Method_SaveSimple = new grpc::Method<global::gRPCService.NET.Simple, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SaveSimple",
        __Marshaller_TestService_Simple,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::gRPCService.NET.RepAllTypes, global::gRPCService.NET.RepAllTypes> __Method_RepSimple = new grpc::Method<global::gRPCService.NET.RepAllTypes, global::gRPCService.NET.RepAllTypes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RepSimple",
        __Marshaller_TestService_RepAllTypes,
        __Marshaller_TestService_RepAllTypes);

    static readonly grpc::Method<global::gRPCService.NET.EmbeddedSimple, global::gRPCService.NET.EmbeddedSimple> __Method_EmbeddedMessageSimple = new grpc::Method<global::gRPCService.NET.EmbeddedSimple, global::gRPCService.NET.EmbeddedSimple>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EmbeddedMessageSimple",
        __Marshaller_TestService_EmbeddedSimple,
        __Marshaller_TestService_EmbeddedSimple);

    static readonly grpc::Method<global::gRPCService.NET.EmbeddedComplex, global::gRPCService.NET.EmbeddedComplex> __Method_EmbeddedMessageComplex = new grpc::Method<global::gRPCService.NET.EmbeddedComplex, global::gRPCService.NET.EmbeddedComplex>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EmbeddedMessageComplex",
        __Marshaller_TestService_EmbeddedComplex,
        __Marshaller_TestService_EmbeddedComplex);

    static readonly grpc::Method<global::gRPCService.NET.InfoString, global::Google.Protobuf.WellKnownTypes.Any> __Method_ReturnAnyType = new grpc::Method<global::gRPCService.NET.InfoString, global::Google.Protobuf.WellKnownTypes.Any>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReturnAnyType",
        __Marshaller_TestService_InfoString,
        __Marshaller_google_protobuf_Any);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.StreamData> __Method_BeginStream = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.StreamData>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "BeginStream",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_TestService_StreamData);

    static readonly grpc::Method<global::gRPCService.NET.StreamInfo, global::gRPCService.NET.StreamData> __Method_BeginStreamEx = new grpc::Method<global::gRPCService.NET.StreamInfo, global::gRPCService.NET.StreamData>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "BeginStreamEx",
        __Marshaller_TestService_StreamInfo,
        __Marshaller_TestService_StreamData);

    static readonly grpc::Method<global::gRPCService.NET.StreamData, global::Google.Protobuf.WellKnownTypes.Empty> __Method_ClientStream = new grpc::Method<global::gRPCService.NET.StreamData, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "ClientStream",
        __Marshaller_TestService_StreamData,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::gRPCService.NET.StreamData, global::gRPCService.NET.StreamInfo> __Method_ClientStreamEx = new grpc::Method<global::gRPCService.NET.StreamData, global::gRPCService.NET.StreamInfo>(
        grpc::MethodType.ClientStreaming,
        __ServiceName,
        "ClientStreamEx",
        __Marshaller_TestService_StreamData,
        __Marshaller_TestService_StreamInfo);

    static readonly grpc::Method<global::gRPCService.NET.StreamInfo, global::gRPCService.NET.StreamData> __Method_DuplexStream = new grpc::Method<global::gRPCService.NET.StreamInfo, global::gRPCService.NET.StreamData>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "DuplexStream",
        __Marshaller_TestService_StreamInfo,
        __Marshaller_TestService_StreamData);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPCService.NET.TestServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TestService</summary>
    [grpc::BindServiceMethod(typeof(TestService), "BindService")]
    public abstract partial class TestServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::gRPCService.NET.AllTypes> CheckAllTypes(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCService.NET.Simple> OneSimple(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCService.NET.Simple> DoubleSimple(global::gRPCService.NET.Simple request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> SaveSimple(global::gRPCService.NET.Simple request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCService.NET.RepAllTypes> RepSimple(global::gRPCService.NET.RepAllTypes request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCService.NET.EmbeddedSimple> EmbeddedMessageSimple(global::gRPCService.NET.EmbeddedSimple request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCService.NET.EmbeddedComplex> EmbeddedMessageComplex(global::gRPCService.NET.EmbeddedComplex request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Any> ReturnAnyType(global::gRPCService.NET.InfoString request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task BeginStream(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::IServerStreamWriter<global::gRPCService.NET.StreamData> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task BeginStreamEx(global::gRPCService.NET.StreamInfo request, grpc::IServerStreamWriter<global::gRPCService.NET.StreamData> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> ClientStream(grpc::IAsyncStreamReader<global::gRPCService.NET.StreamData> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCService.NET.StreamInfo> ClientStreamEx(grpc::IAsyncStreamReader<global::gRPCService.NET.StreamData> requestStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task DuplexStream(grpc::IAsyncStreamReader<global::gRPCService.NET.StreamInfo> requestStream, grpc::IServerStreamWriter<global::gRPCService.NET.StreamData> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(TestServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CheckAllTypes, serviceImpl.CheckAllTypes)
          .AddMethod(__Method_OneSimple, serviceImpl.OneSimple)
          .AddMethod(__Method_DoubleSimple, serviceImpl.DoubleSimple)
          .AddMethod(__Method_SaveSimple, serviceImpl.SaveSimple)
          .AddMethod(__Method_RepSimple, serviceImpl.RepSimple)
          .AddMethod(__Method_EmbeddedMessageSimple, serviceImpl.EmbeddedMessageSimple)
          .AddMethod(__Method_EmbeddedMessageComplex, serviceImpl.EmbeddedMessageComplex)
          .AddMethod(__Method_ReturnAnyType, serviceImpl.ReturnAnyType)
          .AddMethod(__Method_BeginStream, serviceImpl.BeginStream)
          .AddMethod(__Method_BeginStreamEx, serviceImpl.BeginStreamEx)
          .AddMethod(__Method_ClientStream, serviceImpl.ClientStream)
          .AddMethod(__Method_ClientStreamEx, serviceImpl.ClientStreamEx)
          .AddMethod(__Method_DuplexStream, serviceImpl.DuplexStream).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TestServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CheckAllTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.AllTypes>(serviceImpl.CheckAllTypes));
      serviceBinder.AddMethod(__Method_OneSimple, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.Simple>(serviceImpl.OneSimple));
      serviceBinder.AddMethod(__Method_DoubleSimple, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCService.NET.Simple, global::gRPCService.NET.Simple>(serviceImpl.DoubleSimple));
      serviceBinder.AddMethod(__Method_SaveSimple, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCService.NET.Simple, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.SaveSimple));
      serviceBinder.AddMethod(__Method_RepSimple, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCService.NET.RepAllTypes, global::gRPCService.NET.RepAllTypes>(serviceImpl.RepSimple));
      serviceBinder.AddMethod(__Method_EmbeddedMessageSimple, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCService.NET.EmbeddedSimple, global::gRPCService.NET.EmbeddedSimple>(serviceImpl.EmbeddedMessageSimple));
      serviceBinder.AddMethod(__Method_EmbeddedMessageComplex, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCService.NET.EmbeddedComplex, global::gRPCService.NET.EmbeddedComplex>(serviceImpl.EmbeddedMessageComplex));
      serviceBinder.AddMethod(__Method_ReturnAnyType, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCService.NET.InfoString, global::Google.Protobuf.WellKnownTypes.Any>(serviceImpl.ReturnAnyType));
      serviceBinder.AddMethod(__Method_BeginStream, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::gRPCService.NET.StreamData>(serviceImpl.BeginStream));
      serviceBinder.AddMethod(__Method_BeginStreamEx, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::gRPCService.NET.StreamInfo, global::gRPCService.NET.StreamData>(serviceImpl.BeginStreamEx));
      serviceBinder.AddMethod(__Method_ClientStream, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::gRPCService.NET.StreamData, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.ClientStream));
      serviceBinder.AddMethod(__Method_ClientStreamEx, serviceImpl == null ? null : new grpc::ClientStreamingServerMethod<global::gRPCService.NET.StreamData, global::gRPCService.NET.StreamInfo>(serviceImpl.ClientStreamEx));
      serviceBinder.AddMethod(__Method_DuplexStream, serviceImpl == null ? null : new grpc::DuplexStreamingServerMethod<global::gRPCService.NET.StreamInfo, global::gRPCService.NET.StreamData>(serviceImpl.DuplexStream));
    }

  }
}
#endregion
